#include <iostream>

using namespace std;

class Node{
public:
    int data;
    Node* next;
};

class Queue{
private:
    Node* head;
    Node* tail;
public:
    Queue(){
        head = NULL;
        tail = NULL;
    }

    ~Queue(){}

    void Enqueue(int val){
        Node* temp = new Node();
        temp->data = val;
        temp->next = NULL;

        if(head==tail && head==NULL){
            head = temp;
            tail = temp;
            return;
        }

        tail->next = temp;
        tail = temp;
    }

    void Dequeue(){
        if(head==tail && head==NULL){
            cout << "The Queue is already empty\n";
            return;
        }

        Node* temp = head;

        if(head==tail){
                head = NULL;
                tail = NULL;
        }else{
            head = head->next;
        }

        delete temp;
    }

    bool isEmpty(){
        if(head==tail && head==NULL){
            return true;
        }

        return false;
    }

    int peek(){
        if(head==NULL){
            cout << "Queue is empty\n";
            return -1;
        }

        return head->data;
    }

    
};

int main()
{
    
    return 0;
}
